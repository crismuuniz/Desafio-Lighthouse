{"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import mean_absolute_error, mean_squared_error\n","from sklearn.preprocessing import OneHotEncoder, StandardScaler\n","from sklearn.compose import ColumnTransformer\n","from sklearn.pipeline import Pipeline\n","import joblib\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","import pickle\n","import os\n","\n","# Dados\n","data = {\n","    'id': [2595, 3647, 3831, 5022, 5099, 5121, 5178, 5203, 5238, 5295],\n","    'nome': ['Skylit Midtown Castle', 'The Village Of Harlem', 'Cozy Entire Floor of Brownstone', 'Entire Apt',\n","             'Large Cozy', 'BlissArtsSpace', 'Lage Furnished Room Near Bway', 'Cozy Clean Guest Room',\n","             'Cuty & Cozy Lower East Side', 'Beatiful 1br on Upper West Side'],\n","    'host_id': [2845, 4632, 4869, 7192, 7322, 7356, 8967, 7490, 7549, 7702],\n","    'host_name': ['Jennifer', 'Elisabeth', 'LisaRoxanne', 'Laura', 'Chris', 'Garon', 'Schunichi', 'MaryEllen', 'Ben', 'Lena'],\n","    'bairro_group': ['Manhattan', 'Manhattan', 'Brooklyn', 'Manhattan', 'Manhattan', 'Brooklyn', 'Manhattan', 'Manhattan', 'Manhattan', 'Manhattan'],\n","    'bairro': ['Midtown', 'Harlem', 'Clinton Hill', 'East Harlem', 'Murray Hill', 'Bedford Stuyvesant', 'Hells Kitchen',\n","               'Upper West Side', 'China Town', 'Upper West Side'],\n","    'latitude': [40.75362, 40.80902, 40.68514, 40.79851, 40.74767, 40.68688, 40.76489, 40.80178, 40.71344, 40.80316],\n","    'longitude': [-73.98377, -73.9419, -73.95976, -73.94399, -73.975, -73.95596, -73.98493, -73.96723, -73.99037, -73.96545],\n","    'room_type': ['Entire home/apt', 'Private room', 'Entire home/apt', 'Entire home/apt', 'Entire home/apt',\n","                  'Private room', 'Private room', 'Private room', 'Entire home/apt', 'Entire home/apt'],\n","    'minimo_noites': [1, 3, 1, 10, 3, 45, 2, 2, 1, 5],\n","    'numero_de_reviews': [45, 0, 270, 9, 74, 49, 430, 118, 160, 53],\n","    'ultima_review': ['2019-05-21', '2019-05-05', '2018-11-19', '2019-06-22', '2017-10-05', '2019-06-24', '2017-07-21',\n","                      '2019-06-09', '2019-06-22', '2019-06-22'],\n","    'reviews_por_mes': [0.38, 4.64, 0.1, 0.59, 0.4, 3.47, 0.99, 1.33, 0.43, 1.5],\n","    'calculado_host_listings_count': [2, 1, 1, 1, 1, 1, 1, 1, 4, 1],\n","    'disponibilidade_365': [355, 365, 194, 0, 129, 0, 220, 0, 188, 6],\n","    'preco': [225, 150, 89, 80, 200, 60, 79, 79, 150, 135]\n","}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":124},"id":"pvDNlmxIV790","executionInfo":{"status":"error","timestamp":1738763716921,"user_tz":180,"elapsed":456,"user":{"displayName":"","userId":""}},"outputId":"147d1d0e-7840-40d0-eaa8-464bbe90ffa9"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid syntax (<ipython-input-1-33edf24f7041>, line 43)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-33edf24f7041>\"\u001b[0;36m, line \u001b[0;32m43\u001b[0m\n\u001b[0;31m    Analisar o formato de dados é importante para nos fornecer detalhes sobre tipos de dados, e se houverem, valores nulos. Extendendo para o describe que nos fornece valores padrão, min/máximo de variáveis numéricas, média ou estáticas descritivas.\u001b[0m\n\u001b[0m             ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"fuqyF-i7Z172"}},{"cell_type":"markdown","source":["Analisar o formato de dados é importante para nos fornecer detalhes sobre tipos de dados, e se houverem, valores nulos. Extendendo para o describe que nos fornece valores padrão, min/máximo de variáveis numéricas, média ou estáticas descritivas."],"metadata":{"id":"Adpscc19jabE"}},{"cell_type":"code","source":["\n","# Criando o DF\n","df = pd.DataFrame(data)\n","\n","# Informações  do DF\n","print(\"Informações gerais do DataFrame:\")\n","print(df.info())\n","\n","# Estáticas descritivas dos dados\n","print(\"\\nEstatísticas descritivas dos dados:\")\n","print(df.describe())"],"metadata":{"id":"kTZ2bMXnZrjv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Utilizando um histograma, é possível realizar uma distribuição de preços dos imóveisUma distribuição do preço dos imóveis, com intuito de ajudar na identificação de padrões do preço.\n","# Gerando uma matriz de correlação entre as variáveis numéricas, conseguimos identificar a relação entre diferentes colunas, como o preço e  número de avaliações."],"metadata":{"id":"rZXm7hWRjRKK"}},{"cell_type":"code","source":["# Distribuição do preço\n","plt.figure(figsize=(8, 6))\n","sns.histplot(df['preco'], kde=True, color='blue')\n","plt.title('Distribuição do Preço dos Imóveis')\n","plt.xlabel('Preço')\n","plt.ylabel('Frequência')\n","plt.show()\n","\n","# Matriz de correlação entre variáveis numéricas\n","plt.figure(figsize=(10, 8))\n","numerical_df = df.select_dtypes(include=np.number)\n","sns.heatmap(numerical_df.corr(), annot=True, cmap='coolwarm', center=0)\n","plt.title('Matriz de Correlação entre Variáveis Numéricas')\n","plt.show()"],"metadata":{"id":"7ug2yNIca-CM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["A codificação utilizando o pd.get_dummies() permite converter as categorias em variáveis binárias, que é feito em colunas como bairro, bairro_group, host_name e room_type."],"metadata":{"id":"6qBttyrsjL1o"}},{"cell_type":"code","source":["# Codificando as variáveis categóricas\n","df_encoded = pd.get_dummies(df, drop_first=True)\n","\n","# Separando as variáveis independentes e a variável dependente\n","X = df_encoded.drop(columns=['preco'])\n","y = df_encoded['preco']\n"],"metadata":{"id":"2fMS8r-ob-us"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Dividimos os dados em dois conjuntos, 20% teste e 80% treino. Em seguida, entramos em ação com a previsão de preços com DecisionTreeRegressor, dividindo em duas métricas: MAE e RMSE. O modelo treino é salvo para ser utilizado futuramente com o joblib.dump()."],"metadata":{"id":"SNVWANk2jC1s"}},{"cell_type":"code","source":["# Dividindo os dados em treino (80%) e teste (20%)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Criando e treinando o modelo de regressão usando uma árvore de decisão\n","model = DecisionTreeRegressor(random_state=42)\n","model.fit(X_train, y_train)\n","\n","# Realizando previsões de preço usando o conjunto de teste\n","y_pred = model.predict(X_test)\n","\n","# Avaliando o modelo com as métricas MAE e RMSE\n","mae = mean_absolute_error(y_test, y_pred)\n","rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n","\n","print(f'\\nMAE (Erro Absoluto Médio): {mae}')\n","print(f'RMSE (Raiz do Erro Quadrático Médio): {rmse}')\n","\n","# Salvando o modelo treinado para uso futuro\n","joblib.dump(model, 'modelo_decision_tree_preco.pkl')"],"metadata":{"id":"DbEaybuPeWT3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Na previsão para o novo imóvel, são utilizadas as transformação realizadas nos dados de treino, de forma que são aplicadas no imóvel antes de acontecer a previsão."],"metadata":{"id":"7YC0apECi-f0"}},{"cell_type":"code","source":["# Aplicando o modelo em um novo apartamento sugerido para previsão de preço\n","apartamento_sugerido = {\n","    'id': [2595],\n","    'nome': ['Skylit Midtown Castle'],\n","    'host_id': [2845],\n","    'host_name': ['Jennifer'],\n","    'bairro_group': ['Manhattan'],\n","    'bairro': ['Midtown'],\n","    'latitude': [40.75362],\n","    'longitude': [-73.98377],\n","    'room_type': ['Entire home/apt'],\n","    'minimo_noites': [1],\n","    'numero_de_reviews': [45],\n","    'ultima_review': ['2019-05-21'],\n","    'reviews_por_mes': [0.38],\n","    'calculado_host_listings_count': [2],\n","    'disponibilidade_365': [355]\n","}\n","\n","# Conversão do dicionário do apartamento sugerido em df\n","novo_df = pd.DataFrame(apartamento_sugerido)\n","\n","# Aplicando as mesmas transformações realizadas nos dados de treino (codificação e alinhamento de colunas\n","novo_df_encoded = pd.get_dummies(novo_df, drop_first=True)\n","novo_df_encoded = novo_df_encoded.reindex(columns=X_train.columns, fill_value=0)\n","\n","# Previsão de preço do novo apartamento\n","preco_previsto = model.predict(novo_df_encoded)\n","print(f'O preço previsto para o apartamento é: ${preco_previsto[0]:.2f}')"],"metadata":{"id":"UgOJoNm2e4Ez"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Na variável categoria_preco, é onde os imóveis são classificados como alto ou baixo, no valor de base preco. É feito um modelo de regressão logística com base no nome do imovel, e essa variável nome é convertida usando o TF-IDF em uma representação numérica, que transforma as palavras em vetores conforme su importância e frequência.\n","# Esse modelo de regressão logística é avaliado e treinado, usando o classification_report. A árvore de decisão e a regressão logística são salvos em arquivo .pkl, usando o pickle, para serem carregados após, sem possuir a necessidade de re-treinamento."],"metadata":{"id":"Nl9G7xzJipNo"}},{"cell_type":"code","source":["# Dividindo as variáveis independentes e dependentes\n","X = df['nome']  # Características (nome do imóvel)\n","y = df['categoria_preco']  # Variável dependente (categoria de preço)\n","\n","# Dividindo em treino e teste\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Usando TF-IDF para transformar o texto\n","tfidf = TfidfVectorizer(stop_words='english', max_features=10)\n","X_train_tfidf = tfidf.fit_transform(X_train)\n","X_test_tfidf = tfidf.transform(X_test)\n","\n","# Criando e treinando o modelo\n","model = LogisticRegression()\n","model.fit(X_train_tfidf, y_train)\n","\n","# Realizando previsões\n","y_pred = model.predict(X_test_tfidf)\n","\n","# Avaliando o modelo\n","print(classification_report(y_test, y_pred))\n","\n","# Verificando as palavras mais importantes para o modelo\n","feature_names = np.array(tfidf.get_feature_names_out())\n","top_features = np.argsort(model.coef_[0])[-5:]  # Top 5 palavras mais importantes\n","print(\"\\nTop 5 palavras mais importantes para determinar o preço:\")\n","for feature in feature_names[top_features]:\n","    print(feature)\n","\n","# Salvando o modelo treinado usando pickle\n","with open('modelo_decision_tree_preco.pkl', 'wb') as file:\n","    pickle.dump(model, file)"],"metadata":{"id":"Qlc4ESkdf-hK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["  Esta análise desempenhou um papel crucial no entendimento dos dados e na criação de modelos capazes de estimar tanto os preços dos imóveis quanto sua classificação, com base nas informações textuais.\n","\n","O  processo de investigação e modelagem é crucial na estruturação dos dados, permitindo que modelos realizem previsões mais eficientes e, proporcionando uma visão mais clara e explicada dos fatores que afetam o preço dos imóveis."],"metadata":{"id":"6yev3qMZiAm0"}}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1738766496540}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}